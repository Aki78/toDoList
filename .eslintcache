[{"/home/aki/my-app/src/index.js":"1","/home/aki/my-app/src/App.js":"2","/home/aki/my-app/src/reportWebVitals.js":"3","/home/aki/my-app/src/components/entry.jsx":"4"},{"size":500,"mtime":1609685703680,"results":"5","hashOfConfig":"6"},{"size":3633,"mtime":1609767860870,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609685409895,"results":"8","hashOfConfig":"6"},{"size":1005,"mtime":1609761065559,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"88s64g",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/aki/my-app/src/index.js",[],["21","22"],"/home/aki/my-app/src/App.js",["23"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Entry from \"./components/entry\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Table } from \"react-bootstrap\";\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from \"@sandstreamdev/react-swipeable-list\";\nimport \"@sandstreamdev/react-swipeable-list/dist/styles.css\";\nimport { FaCheckSquare } from \"react-icons/fa\";\n\nclass App extends Component {\n  state = {\n    toDo: \"\",\n    toDoListText: [],\n    toDoListNum: [],\n    mouseDown: false,\n  };\n  setText = (e) => {\n    this.setState({ toDo: e.target.value });\n  };\n  setLevel = (e) => {\n    var joined = [...this.state.toDoListText];\n    joined.push(this.state.toDo);\n    console.log(joined);\n    this.setState({ toDoListText: joined });\n\n    var joinedNum = [...this.state.toDoListNum];\n    joinedNum.push(e);\n    this.setState({ toDoListNum: joinedNum });\n\n    this.setState({ toDo: \"\" });\n  };\n  delList = (delIndex) => {\n    //    if (myProgress > 80 && !this.state.mouseDown) {\n    let a = [...this.state.toDoListText];\n    a.splice(delIndex, 1);\n    this.setState({ toDoListText: a });\n    //    }\n  };\n  isMouseDown = () => {\n    this.setState({ mouseDown: true });\n    console.log(this.state.mouseDown);\n  };\n  isMouseUp = () => {\n    this.setState({ mouseDown: false });\n    console.log(this.state.mouseDown);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Entry\n          setText={this.setText}\n          setLevel={this.setLevel}\n          toDo={this.state.toDo}\n        />\n\n        <Container className=\"mt-5\">\n          <Table striped size=\"sm\">\n            <tbody className=\"center\">\n              <tr>\n                <th className=\"myTableWidth align-middle\"></th>\n                <th style={{ fontSize: \"25px\" }} className=\"align-middle\"></th>\n              </tr>\n              {this.state.toDoListText.map((elem, index) => (\n                <tr key={index}>\n                  <td className=\"myTableWidth align-middle\">\n                    <div className=\"numberCircle align-middle\">\n                      {this.state.toDoListNum[index]}\n                    </div>\n                  </td>\n                  <td className=\"doneTextWidth\">\n                    <SwipeableListItem\n                      swipeRight={{\n                        content: (\n                          <div>\n                            <Button\n                              onMouseDown={this.isMouseDown}\n                              onMouseUp={this.isMouseUp}\n                              className=\"btn \"\n                            >\n                              <FaCheckSquare />\n                            </Button>\n                          </div>\n                        ),\n                        action: () => this.delList(index),\n                      }}\n                      onSwipeProgress={(progress) =>\n                        console.info(`Swipe progress: ${progress}%`)\n                      }\n                    >\n                      <Button\n                        onMouseDown={this.isMouseDown}\n                        onMouseUp={this.isMouseUp}\n                        className=\"btn\"\n                        variant=\"outline-dark\"\n                      >\n                        <span style={{ fontSize: \"30px\" }}>{elem}</span>\n                      </Button>\n                    </SwipeableListItem>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/aki/my-app/src/reportWebVitals.js",[],"/home/aki/my-app/src/components/entry.jsx",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":9,"column":3,"nodeType":"32","messageId":"33","endLine":9,"endColumn":16},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'SwipeableList' is defined but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]